#+TITLE: unitime
#+AUTHOR: John Herrlin
#+EMAIL: jherrlin@gmail.com
#+DATE: <2017-01-04 Wed>

[[https://travis-ci.org/jherrlin/unitime][https://travis-ci.org/jherrlin/unitime.svg?branch=master]]

This project depends on: [[https://github.com/jherrlin/timeedit-lnu-api][timeedit-lnu-api]]

* Endpoints

In the examples below I am using python and a third-party lib called [[http://docs.python-requests.org/en/master/][requests]].


** Course

   To get all of the courses we make a *GET* request to *https://api.kodkollektivet.se/unitime/course/*.
   This will give us a huge list with information about the courses.

   #+BEGIN_SRC python
     >>> import requests
     >>> from pprint import pprint as pp
     >>> req = requests.get('https://api.kodkollektivet.se/unitime/course/')
     >>> pp(req.json())
     [{'course_code': '0LA011',
       'course_id': '276323',
       'course_language': 'Svenska',
       'course_location': 'Växjö',
       'course_points': '7,5 hp',
       'course_reg': '57847',
       'course_speed': '25%',
       'name_en': 'Latin, beginners´ course I',
       'name_sv': 'Latin, nybörjarkurs I',
       'semester': 'VT17',
       'syllabus_en': 'http://api.kursinfo.lnu.se/GenerateDocument.ashx?templatetype=coursesyllabus&code=0LA011&documenttype=pdf&lang=en',
       'syllabus_sv': 'http://api.kursinfo.lnu.se/GenerateDocument.ashx?templatetype=coursesyllabus&code=0LA011&documenttype=pdf&lang=sv',
       'url': 'https://lnu.se/kurs/0LA011'},
      ...
      {'course_code': '1DV701',
       'course_id': '268260',
       'course_language': 'Engelska',
       'course_location': 'Växjö',
       'course_points': '7,5 hp',
       'course_reg': '69016',
       'course_speed': '50%',
       'name_en': 'Computer Networks - an introduction',
       'name_sv': 'Datornät - introduktion',
       'semester': 'VT17',
       'syllabus_en': 'http://api.kursinfo.lnu.se/GenerateDocument.ashx?templatetype=coursesyllabus&code=1DV701&documenttype=pdf&lang=en',
       'syllabus_sv': 'http://api.kursinfo.lnu.se/GenerateDocument.ashx?templatetype=coursesyllabus&code=1DV701&documenttype=pdf&lang=sv',
       'url': 'https://lnu.se/kurs/1DV701'}]
   #+END_SRC

   Get a single course object.
   We use a *GET* request to *https://api.kodkollektivet.se/unitime/course/<COURSE CODE>/*
   In the response we get a single course object.

   #+BEGIN_SRC python
     >>> import requests
     >>> from pprint import pprint as pp
     >>> req = requests.get('https://api.kodkollektivet.se/unitime/course/1dv701/')
     >>> pp(req.json())
     {'course_code': '1DV701',
      'course_id': '268260',
      'course_language': 'Engelska',
      'course_location': 'Växjö',
      'course_points': '7,5 hp',
      'course_reg': '69016',
      'course_speed': '50%',
      'name_en': 'Computer Networks - an introduction',
      'name_sv': 'Datornät - introduktion',
      'semester': 'VT17',
      'syllabus_en': 'http://api.kursinfo.lnu.se/GenerateDocument.ashx?templatetype=coursesyllabus&code=1DV701&documenttype=pdf&lang=en',
      'syllabus_sv': 'http://api.kursinfo.lnu.se/GenerateDocument.ashx?templatetype=coursesyllabus&code=1DV701&documenttype=pdf&lang=sv',
      'url': 'https://lnu.se/kurs/1DV701'}
   #+END_SRC

   To know the amount of courses that we have in the database we can do
   a *HEAD* request to *https://api.kodkollektivet.se/unitime/course/*.
   In the header we the get the amount in *Content-Length*.

   #+BEGIN_SRC python
     >>> import requests
     >>> req = requests.head('https://api.kodkollektivet.se/unitime/course/')
     >>> req.headers['Content-Length']
     '2020'
   #+END_SRC

** Events/Schedule

   Get a list of events/schedule for a course.
   We use a *GET* request to *https://api.kodkollektivet.se/unitime/event/<COURSE CODE>/*
   In the response we get a list of event objects.

   #+BEGIN_SRC python
     >>> import requests
     >>> from pprint import pprint as pp
     >>> req = requests.get('https://api.kodkollektivet.se/unitime/event/1dv701/')
     >>> pp(req.json())
     [{'desc': '',
       'endtime': '17:00',
       'info': 'Course start',
       'room': 'D1136A_V',
       'startdate': '2017-01-17',
       'starttime': '15:15',
       'teacher': 'Morgan Ericsson, Ola Flygt'},
      {'desc': '',
       'endtime': '12:00',
       'info': 'Lecture',
       'room': 'D1136A_V',
       'startdate': '2017-01-19',
       'starttime': '10:15',
       'teacher': 'Morgan Ericsson'},
      {'desc': '',
       'endtime': '12:00',
       'info': 'Information, Laboratory lesson',
       'room': 'Newton_V',
       'startdate': '2017-01-23',
       'starttime': '10:15',
       'teacher': 'Stepan Shevtsov'}]
   #+END_SRC

   We can also use a *POST* request to get events for multiple courses.
   We then get a list with objects. The objects contains one key with the
   course code and the other key contains a list with events.

   #+BEGIN_SRC python
     >>> import requests
     >>> from pprint import pprint as pp
     >>> req = requests.post('https://api.kodkollektivet.se/unitime/event/', data={'courses': ['1dv507', '1dv702']})
     >>> pp(req.json())
     [{'course': '1dv507',
       'events': [{'desc': '',
                   'endtime': '10:00',
                   'info': 'Course start',
                   'room': 'D1136A_V',
                   'startdate': '2017-01-16',
                   'starttime': '08:15',
                   'teacher': 'Jonas Lundberg'},
                  {'desc': '',
                   'endtime': '17:00',
                   'info': 'Laboratory lesson',
                   'room': 'Datorsal D1142V (PC), Datorsal D1170A_V',
                   'startdate': '2017-03-13',
                   'starttime': '15:15',
                   'teacher': 'Amanuens 2'}]},
      {'course': '1dv702',
       'events': [{'desc': '',
                   'endtime': '12:00',
                   'info': 'Course start',
                   'room': 'D1173A_V',
                   'startdate': '2017-03-20',
                   'starttime': '10:15',
                   'teacher': 'Gästlärare FTK, Ola Flygt'},
                  {'desc': '',
                   'endtime': '15:00',
                   'info': 'Lecture',
                   'room': 'D1167V',
                   'startdate': '2017-05-31',
                   'starttime': '13:15',
                   'teacher': 'Gästlärare FTK'}]}]
   #+END_SRC

** Rooms

   Look an event object in the section above.
   The rooms can look strange, like *Datorsal D1142V (PC), Datorsal D1170A_V* and
   *D1167V*. We can send that string directly to the API and it will sort it
   out.
   We need to do a *POST* request to *https://api.kodkollektivet.se/unitime/room/*
   with the data ={'room': '<ROOM STRING>'}=.
   In the response we get a list of rooms the API found.
   In the example below there are 2 rooms.

   #+BEGIN_SRC python
     >>> import requests
     >>> from pprint import pprint as pp
     >>> req = requests.post('https://api.kodkollektivet.se/unitime/room/', data={'room': 'Datorsal D1142V (PC), Datorsal D1170A_V'})
     >>> pp(req.json())
     [{'city': 'Växjö',
       'floor': 1,
       'lat': 56.855726,
       'lon': 14.828432,
       'name': 'D1142V'},
      {'city': 'Växjö',
       'floor': 1,
       'lat': 56.855845,
       'lon': 14.82878,
       'name': 'D1170'}]
   #+END_SRC

   In this request the room string only contains one room.
   And in the response list we only get one room.

   #+BEGIN_SRC python
          >>> import requests
          >>> from pprint import pprint as pp
          >>> req = requests.post('https://api.kodkollektivet.se/unitime/room/', data={'room': 'D1167V'})
          >>> pp(req.json())
          [{'city': 'Växjö',
            'floor': 1,
            'lat': 56.855651,
            'lon': 14.828812,
            'name': 'D1167V'}]
   #+END_SRC

* Setup development environment

#+BEGIN_SRC sh
python manage.py makemigrations
python manage.py migrate
python manage.py createsuperuser
python manage.py runserver
#+END_SRC
